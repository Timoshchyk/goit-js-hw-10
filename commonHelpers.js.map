{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst refs = {\n  btn: document.querySelector('[data-start]'),\n  input: document.querySelector('#datetime-picker'),\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nlet userSelectedDate;\nlet interval;\n\nrefs.btn.disabled = true;\n\nrefs.btn.addEventListener('click', () => {\n  if (userSelectedDate) {\n    refs.btn.disabled = true;\n    refs.input.disabled = true;\n    startTimer();\n  }\n});\n\nfunction startTimer() {\n  interval = setInterval(timerSet, 1000);\n}\n\nfunction timerSet() {\n  const date = new Date();\n  const timeLeft = userSelectedDate - date;\n\n  if (timeLeft <= 0) {\n    stopTimer();\n    return;\n  }\n\n  const { days, hours, minutes, seconds } = convertMs(timeLeft);\n  refs.days.textContent = days;\n  refs.hours.textContent = hours;\n  refs.minutes.textContent = minutes;\n  refs.seconds.textContent = seconds;\n}\n\nfunction stopTimer() {\n  clearInterval(interval);\n  refs.input.disabled = false;\n}\n\nconst options = {\n  closeOnEscape: true,\n  timeout: 1000,\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate < new Date()) {\n      iziToast.error({\n        position: 'topRight',\n        message: 'Please choose a date in the future',\n      });\n      refs.btn.disabled = true;\n    } else {\n      refs.btn.disabled = false;\n    }\n  },\n};\n\nconst fp = flatpickr('#datetime-picker', options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day)\n    .toString()\n    .padStart(2, '0');\n  const hours = Math.floor((ms % day) / hour)\n    .toString()\n    .padStart(2, '0');\n  const minutes = Math.floor(((ms % day) % hour) / minute)\n    .toString()\n    .padStart(2, '0');\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second)\n    .toString()\n    .padStart(2, '0');\n\n  return { days, hours, minutes, seconds };\n}"],"names":["refs","userSelectedDate","interval","startTimer","timerSet","timeLeft","stopTimer","days","hours","minutes","seconds","convertMs","options","selectedDates","iziToast","flatpickr","ms"],"mappings":"2GAKA,MAAMA,EAAO,CACX,IAAK,SAAS,cAAc,cAAc,EAC1C,MAAO,SAAS,cAAc,kBAAkB,EAChD,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEA,IAAIC,EACAC,EAEJF,EAAK,IAAI,SAAW,GAEpBA,EAAK,IAAI,iBAAiB,QAAS,IAAM,CACnCC,IACFD,EAAK,IAAI,SAAW,GACpBA,EAAK,MAAM,SAAW,GACtBG,IAEJ,CAAC,EAED,SAASA,GAAa,CACpBD,EAAW,YAAYE,EAAU,GAAI,CACvC,CAEA,SAASA,GAAW,CAElB,MAAMC,EAAWJ,EADJ,IAAI,KAGjB,GAAII,GAAY,EAAG,CACjBC,IACA,MACD,CAED,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAQ,EAC5DL,EAAK,KAAK,YAAcO,EACxBP,EAAK,MAAM,YAAcQ,EACzBR,EAAK,QAAQ,YAAcS,EAC3BT,EAAK,QAAQ,YAAcU,CAC7B,CAEA,SAASJ,GAAY,CACnB,cAAcJ,CAAQ,EACtBF,EAAK,MAAM,SAAW,EACxB,CAEA,MAAMY,EAAU,CACd,cAAe,GACf,QAAS,IACT,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBZ,EAAmBY,EAAc,CAAC,EAC9BZ,EAAmB,IAAI,MACzBa,EAAS,MAAM,CACb,SAAU,WACV,QAAS,oCACjB,CAAO,EACDd,EAAK,IAAI,SAAW,IAEpBA,EAAK,IAAI,SAAW,EAEvB,CACH,EAEWe,EAAU,mBAAoBH,CAAO,EAEhD,SAASD,EAAUK,EAAI,CAMrB,MAAMT,EAAO,KAAK,MAAMS,EAAK,KAAG,EAC7B,SAAU,EACV,SAAS,EAAG,GAAG,EACZR,EAAQ,KAAK,MAAOQ,EAAK,MAAO,IAAI,EACvC,SAAU,EACV,SAAS,EAAG,GAAG,EACZP,EAAU,KAAK,MAAQO,EAAK,MAAO,KAAQ,GAAM,EACpD,SAAU,EACV,SAAS,EAAG,GAAG,EACZN,EAAU,KAAK,MAASM,EAAK,MAAO,KAAQ,IAAU,GAAM,EAC/D,SAAU,EACV,SAAS,EAAG,GAAG,EAElB,MAAO,CAAE,KAAAT,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}